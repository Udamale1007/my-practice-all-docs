{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction ChatbotComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 8);\n    i0.ɵɵlistener(\"click\", function ChatbotComponent_li_4_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const chat_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.selectChat(chat_r2));\n    });\n    i0.ɵɵelementStart(1, \"span\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const chat_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(chat_r2.name);\n  }\n}\nfunction ChatbotComponent_div_9_div_1_div_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 17);\n    i0.ɵɵtext(1, \"You\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"sent\": a0,\n    \"received\": a1\n  };\n};\nfunction ChatbotComponent_div_9_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, ChatbotComponent_div_9_div_1_div_1_span_1_Template, 2, 0, \"span\", 16);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(3, _c0, message_r9.sentByUser, !message_r9.sentByUser));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", message_r9.sentByUser);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", message_r9.content, \" \");\n  }\n}\nfunction ChatbotComponent_div_9_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtemplate(1, ChatbotComponent_div_9_div_1_div_1_Template, 3, 6, \"div\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const chat_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", chat_r5.messages);\n  }\n}\nfunction ChatbotComponent_div_9_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"input\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function ChatbotComponent_div_9_div_2_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.newMessage = $event);\n    })(\"keyup.enter\", function ChatbotComponent_div_9_div_2_Template_input_keyup_enter_1_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const chat_r5 = i0.ɵɵnextContext().$implicit;\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.sendMessage(chat_r5));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function ChatbotComponent_div_9_div_2_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const chat_r5 = i0.ɵɵnextContext().$implicit;\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.sendMessage(chat_r5));\n    });\n    i0.ɵɵtext(3, \"Send\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r7.newMessage);\n  }\n}\nfunction ChatbotComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtemplate(1, ChatbotComponent_div_9_div_1_Template, 2, 1, \"div\", 11);\n    i0.ɵɵtemplate(2, ChatbotComponent_div_9_div_2_Template, 4, 1, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const chat_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.currentChat && ctx_r1.currentChat.id === chat_r5.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.currentChat && ctx_r1.currentChat.id === chat_r5.id);\n  }\n}\nexport class ChatbotComponent {\n  constructor() {\n    this.chats = [];\n    this.currentChat = null;\n    this.newMessage = '';\n    this.createChat(); // Create a default chat when the component initializes\n  }\n\n  sendMessage(chat) {\n    if (!this.newMessage.trim()) return;\n    const message = {\n      content: this.newMessage,\n      sentByUser: true\n    };\n    chat.messages.push(message);\n    this.generateResponse(chat, message);\n    this.newMessage = '';\n  }\n  generateResponse(chat, message) {\n    const responses = [\"I'm sorry, I didn't understand that.\", \"Could you please provide more details?\", \"Here is some information that might help...\", \"How can I assist you further?\", \"Thank you for reaching out! Let me find the answer for you.\"];\n    const randomIndex = Math.floor(Math.random() * responses.length);\n    message.response = responses[randomIndex];\n    chat.messages.push({\n      content: message.response,\n      sentByUser: false\n    });\n  }\n  createChat() {\n    const newChatId = this.chats.length + 1;\n    const newChatName = \"Chat \" + newChatId;\n    const newChat = {\n      id: newChatId,\n      name: newChatName,\n      messages: []\n    };\n    this.chats.push(newChat);\n    this.selectChat(newChat);\n  }\n  selectChat(chat) {\n    this.currentChat = chat;\n  }\n  static #_ = this.ɵfac = function ChatbotComponent_Factory(t) {\n    return new (t || ChatbotComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChatbotComponent,\n    selectors: [[\"app-chatbot\"]],\n    decls: 10,\n    vars: 2,\n    consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-4\", \"col-lg-3\", \"sidebar\"], [1, \"list-unstyled\"], [\"class\", \"py-2 px-3 chat-option\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-primary\", \"btn-block\", \"mt-4\", 3, \"click\"], [1, \"col-md-8\", \"col-lg-9\"], [\"class\", \"col-sm-12 col-md-6 col-lg-4 chat-area\", 4, \"ngFor\", \"ngForOf\"], [1, \"py-2\", \"px-3\", \"chat-option\", 3, \"click\"], [1, \"font-weight-bold\"], [1, \"col-sm-12\", \"col-md-6\", \"col-lg-4\", \"chat-area\"], [\"class\", \"messages\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"messages\"], [\"class\", \"message p-2 mb-3 rounded\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"message\", \"p-2\", \"mb-3\", \"rounded\", 3, \"ngClass\"], [\"class\", \"font-weight-bold text-right d-block mb-1\", 4, \"ngIf\"], [1, \"font-weight-bold\", \"text-right\", \"d-block\", \"mb-1\"], [\"type\", \"text\", \"placeholder\", \"Type a message...\", 1, \"form-control\", \"mb-3\", 3, \"ngModel\", \"ngModelChange\", \"keyup.enter\"], [1, \"btn\", \"btn-primary\", \"btn-block\", 3, \"click\"]],\n    template: function ChatbotComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"ul\", 3);\n        i0.ɵɵtemplate(4, ChatbotComponent_li_4_Template, 3, 1, \"li\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function ChatbotComponent_Template_button_click_5_listener() {\n          return ctx.createChat();\n        });\n        i0.ɵɵtext(6, \"New Chat\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"div\", 1);\n        i0.ɵɵtemplate(9, ChatbotComponent_div_9_Template, 3, 2, \"div\", 7);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.chats);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.chats);\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n    styles: [\".chat-area[_ngcontent-%COMP%] {\\r\\n  padding: 10px;\\r\\n}\\r\\n\\r\\n.messages[_ngcontent-%COMP%] {\\r\\n  max-height: 300px;\\r\\n  overflow-y: auto;\\r\\n}\\r\\n\\r\\n.message[_ngcontent-%COMP%] {\\r\\n  background-color: #f0f0f0;\\r\\n  margin-bottom: 5px;\\r\\n  padding: 5px 10px;\\r\\n  border-radius: 5px;\\r\\n}\\r\\n\\r\\n.message.sent[_ngcontent-%COMP%] {\\r\\n  background-color: #aaf;\\r\\n  align-self: flex-end;\\r\\n}\\r\\n\\r\\n.message.received[_ngcontent-%COMP%] {\\r\\n  background-color: #afa;\\r\\n}\\r\\n\\r\\ninput[type=\\\"text\\\"][_ngcontent-%COMP%] {\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.sidebar[_ngcontent-%COMP%] {\\r\\n  padding: 10px;\\r\\n}\\r\\n\\r\\n.chat-option[_ngcontent-%COMP%] {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.btn-primary[_ngcontent-%COMP%] {\\r\\n  background-color: #007bff;\\r\\n  color: #fff;\\r\\n  border-color: #007bff;\\r\\n}\\r\\n\\r\\n.btn-primary[_ngcontent-%COMP%]:hover {\\r\\n  background-color: #0056b3;\\r\\n  border-color: #0056b3;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2hhdGJvdC9jaGF0Ym90LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLGtCQUFrQjtFQUNsQixpQkFBaUI7RUFDakIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0Usc0JBQXNCO0VBQ3RCLG9CQUFvQjtBQUN0Qjs7QUFFQTtFQUNFLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsV0FBVztFQUNYLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixxQkFBcUI7QUFDdkIiLCJzb3VyY2VzQ29udGVudCI6WyIuY2hhdC1hcmVhIHtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG59XHJcblxyXG4ubWVzc2FnZXMge1xyXG4gIG1heC1oZWlnaHQ6IDMwMHB4O1xyXG4gIG92ZXJmbG93LXk6IGF1dG87XHJcbn1cclxuXHJcbi5tZXNzYWdlIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmMGYwO1xyXG4gIG1hcmdpbi1ib3R0b206IDVweDtcclxuICBwYWRkaW5nOiA1cHggMTBweDtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbn1cclxuXHJcbi5tZXNzYWdlLnNlbnQge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNhYWY7XHJcbiAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XHJcbn1cclxuXHJcbi5tZXNzYWdlLnJlY2VpdmVkIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYWZhO1xyXG59XHJcblxyXG5pbnB1dFt0eXBlPVwidGV4dFwiXSB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxufVxyXG5cclxuLnNpZGViYXIge1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbn1cclxuXHJcbi5jaGF0LW9wdGlvbiB7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4uYnRuLXByaW1hcnkge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7XHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgYm9yZGVyLWNvbG9yOiAjMDA3YmZmO1xyXG59XHJcblxyXG4uYnRuLXByaW1hcnk6aG92ZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDU2YjM7XHJcbiAgYm9yZGVyLWNvbG9yOiAjMDA1NmIzO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","ChatbotComponent","constructor","createChat","sendMessage","chat","newMessage","trim","message","content","sentByUser","messages","push","generateResponse","responses","randomIndex","Math","floor","random","length","response","newChatId","chats","newChatName","newChat","id","name","selectChat","currentChat","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\GitHub\\my-practice-all-docs\\Angular\\Projects\\ChatBot\\src\\app\\chatbot\\chatbot.component.html","E:\\GitHub\\my-practice-all-docs\\Angular\\Projects\\ChatBot\\src\\app\\chatbot\\chatbot.component.ts"],"sourcesContent":["<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-md-4 col-lg-3 sidebar\">\n      <ul class=\"list-unstyled\">\n        <li *ngFor=\"let chat of chats\" (click)=\"selectChat(chat)\" class=\"py-2 px-3 chat-option\">\n          <span class=\"font-weight-bold\">{{ chat.name }}</span>\n        </li>\n      </ul>\n      <button (click)=\"createChat()\" class=\"btn btn-primary btn-block mt-4\">New Chat</button>\n    </div>\n    <div class=\"col-md-8 col-lg-9\">\n      <div class=\"row\">\n        <div *ngFor=\"let chat of chats\" class=\"col-sm-12 col-md-6 col-lg-4 chat-area\">\n          <div *ngIf=\"currentChat && currentChat.id === chat.id\" class=\"messages\">\n            <div *ngFor=\"let message of chat.messages\" class=\"message p-2 mb-3 rounded\" [ngClass]=\"{'sent': message.sentByUser, 'received': !message.sentByUser}\">\n              <span *ngIf=\"message.sentByUser\" class=\"font-weight-bold text-right d-block mb-1\">You</span>\n              {{ message.content }}\n            </div>\n          </div>\n          <div *ngIf=\"currentChat && currentChat.id === chat.id\">\n            <input type=\"text\" placeholder=\"Type a message...\" [(ngModel)]=\"newMessage\" (keyup.enter)=\"sendMessage(chat)\" class=\"form-control mb-3\">\n            <button (click)=\"sendMessage(chat)\" class=\"btn btn-primary btn-block\">Send</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\ninterface ChatMessage {\n  content: string;\n  sentByUser: boolean;\n  response?: string; // Add a response property to each message\n}\n\ninterface Chat {\n  id: number;\n  name: string;\n  messages: ChatMessage[];\n}\n\n@Component({\n  selector: 'app-chatbot',\n  templateUrl: './chatbot.component.html',\n  styleUrls: ['./chatbot.component.css']\n})\n\nexport class ChatbotComponent {\n  chats: Chat[] = [];\n  currentChat: Chat | null = null;\n  newMessage: string = '';\n\n  constructor() {\n    this.createChat(); // Create a default chat when the component initializes\n  }\n\n  sendMessage(chat: Chat) {\n    if (!this.newMessage.trim()) return;\n    const message: ChatMessage = { content: this.newMessage, sentByUser: true };\n    chat.messages.push(message);\n    this.generateResponse(chat, message);\n    this.newMessage = '';\n  }\n\n  generateResponse(chat: Chat, message: ChatMessage) {\n    const responses = [\n      \"I'm sorry, I didn't understand that.\",\n      \"Could you please provide more details?\",\n      \"Here is some information that might help...\",\n      \"How can I assist you further?\",\n      \"Thank you for reaching out! Let me find the answer for you.\"\n    ];\n    const randomIndex = Math.floor(Math.random() * responses.length);\n    message.response = responses[randomIndex];\n    chat.messages.push({ content: message.response, sentByUser: false });\n  }\n\n  createChat() {\n    const newChatId = this.chats.length + 1;\n    const newChatName = \"Chat \" + newChatId;\n    const newChat: Chat = { id: newChatId, name: newChatName, messages: [] };\n    this.chats.push(newChat);\n    this.selectChat(newChat);\n  }\n\n  selectChat(chat: Chat) {\n    this.currentChat = chat;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}